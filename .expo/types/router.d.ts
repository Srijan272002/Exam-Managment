/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/error-boundary`; params?: Router.UnknownInputParams; } | { pathname: `/modal`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/documents` | `/documents`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/exams` | `/exams`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/monitoring` | `/monitoring`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/reports` | `/reports`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/users` | `/users`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/error-boundary`; params?: Router.UnknownOutputParams; } | { pathname: `/modal`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/documents` | `/documents`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/exams` | `/exams`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/monitoring` | `/monitoring`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/reports` | `/reports`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/users` | `/users`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } };
      href: Router.RelativePathString | Router.ExternalPathString | `/error-boundary${`?${string}` | `#${string}` | ''}` | `/modal${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/documents${`?${string}` | `#${string}` | ''}` | `/documents${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/exams${`?${string}` | `#${string}` | ''}` | `/exams${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/monitoring${`?${string}` | `#${string}` | ''}` | `/monitoring${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/reports${`?${string}` | `#${string}` | ''}` | `/reports${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/settings${`?${string}` | `#${string}` | ''}` | `/settings${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/users${`?${string}` | `#${string}` | ''}` | `/users${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/error-boundary`; params?: Router.UnknownInputParams; } | { pathname: `/modal`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/documents` | `/documents`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/exams` | `/exams`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/monitoring` | `/monitoring`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/reports` | `/reports`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/users` | `/users`; params?: Router.UnknownInputParams; } | `/+not-found` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };
    }
  }
}
